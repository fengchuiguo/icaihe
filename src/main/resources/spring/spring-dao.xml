<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">

    <!--配置整合myBatis过程-->

    <!--第一步：配置数据库相关参数-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!--第二步：数据库连接池-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
        <!--&lt;!&ndash;配置连接池属性&ndash;&gt;-->
        <!--<property name="driverClass" value="${jdbc.driverClass}"></property>-->
        <!--<property name="jdbcUrl" value="${jdbc.url}"></property>-->
        <!--<property name="user" value="${jdbc.username}"></property>-->
        <!--<property name="password" value="${jdbc.password}"></property>-->

        <!--&lt;!&ndash;配置c3p0连接池私有属性  ?&ndash;&gt;-->
        <!--<property name="maxPoolSize" value="30"></property>-->
        <!--<property name="minPoolSize" value="10"></property>-->
        <!--<property name="autoCommitOnClose" value="false"></property>-->
        <!--<property name="checkoutTimeout" value="1000"></property>-->
        <!--<property name="acquireRetryAttempts" value="2"></property>-->
    <!--</bean>-->

    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0"/>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000"/>

        <!-- <property name="poolPreparedStatements" value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->
        <property name="validationQuery" value="${hibernate.validationQuery}"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000"/>

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>

        <!-- 监控数据库 -->
        <!-- <property name="filters" value="mergeStat" /> -->
        <property name="filters" value="stat"/>
    </bean>

    <!--约定大于配置-->
    <!--配置sqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"></property>
        <!--配置mybatis全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--扫描entity包，使用别名 -->
        <property name="typeAliasesPackage" value="com.robotsafebox.entity"></property>
        <!--扫描sql配置文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>

        <!--配置插件，此处配置了分页拦截器，使用封装的Pager对象简化分页操作-->
        <property name="plugins">
            <array>
                <bean class="com.robotsafebox.framework.interceptor.dao.PageInterceptor">
                    <property name="databaseType" value="${jdbc.databaseType}"/>
                </bean>
            </array>
        </property>

    </bean>

    <!--配置扫描dao接口包，动态实现dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--给出需要扫描dao接口包 -->
        <property name="basePackage" value="com.robotsafebox.dao"></property>
    </bean>

    <!--&lt;!&ndash;RedisDao &ndash;&gt;-->
    <!--<bean id="redisDao" class="com.robotsafebox.dao.cache.demo1.RedisDao">-->
        <!--<constructor-arg index="0" value="localhost"></constructor-arg>-->
        <!--<constructor-arg index="1" value="6379"></constructor-arg>-->
    <!--</bean>-->


</beans>